[{"/Volumes/SamsungT7/Web-Dev /PERN-stack/todoList/client/src/index.js":"1","/Volumes/SamsungT7/Web-Dev /PERN-stack/todoList/client/src/App.js":"2","/Volumes/SamsungT7/Web-Dev /PERN-stack/todoList/client/src/components/ListTodos.js":"3","/Volumes/SamsungT7/Web-Dev /PERN-stack/todoList/client/src/components/InputTodo.js":"4","/Volumes/SamsungT7/Web-Dev /PERN-stack/todoList/client/src/components/EditTodo.js":"5"},{"size":222,"mtime":1679440330000,"results":"6","hashOfConfig":"7"},{"size":351,"mtime":1679445050000,"results":"8","hashOfConfig":"7"},{"size":1712,"mtime":1679444960000,"results":"9","hashOfConfig":"7"},{"size":967,"mtime":1679444875000,"results":"10","hashOfConfig":"7"},{"size":2352,"mtime":1679444867000,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1phg1ba",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"/Volumes/SamsungT7/Web-Dev /PERN-stack/todoList/client/src/index.js",[],[],"/Volumes/SamsungT7/Web-Dev /PERN-stack/todoList/client/src/App.js",[],[],"/Volumes/SamsungT7/Web-Dev /PERN-stack/todoList/client/src/components/ListTodos.js",["29"],[],"import React, { Fragment, useEffect, useState } from \"react\";\n\nimport EditTodo from \"./EditTodo\";\n\nconst ListTodos = () => {\n  const [todos, setTodos] = useState([]);\n\n  //delete todo function\n\n  const deleteTodo = async id => {\n    try {\n      const deleteTodo = await fetch(`http://localhost:5001/todos/${id}`, {\n        method: \"DELETE\"\n      });\n\n      setTodos(todos.filter(todo => todo.todo_id !== id));\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const getTodos = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5001/todos\");\n      const jsonData = await response.json();\n\n      setTodos(jsonData);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  useEffect(() => {\n    getTodos();\n  }, []);\n\n  console.log(todos);\n\n  return (\n    <Fragment>\n      {\" \"}\n      <table class=\"table mt-5 text-center\">\n        <thead>\n          <tr>\n            <th>Description</th>\n            <th>Edit</th>\n            <th>Delete</th>\n          </tr>\n        </thead>\n        <tbody>\n          {/*<tr>\n            <td>John</td>\n            <td>Doe</td>\n            <td>john@example.com</td>\n          </tr> */}\n          {todos.map(todo => (\n            <tr key={todo.todo_id}>\n              <td>{todo.description}</td>\n              <td>\n                <EditTodo todo={todo} />\n              </td>\n              <td>\n                <button\n                  className=\"btn btn-danger\"\n                  onClick={() => deleteTodo(todo.todo_id)}\n                >\n                  Delete\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </Fragment>\n  );\n};\n\nexport default ListTodos;\n","/Volumes/SamsungT7/Web-Dev /PERN-stack/todoList/client/src/components/InputTodo.js",["30"],[],"/Volumes/SamsungT7/Web-Dev /PERN-stack/todoList/client/src/components/EditTodo.js",["31"],[],"import React, { Fragment, useState } from \"react\";\n\nconst EditTodo = ({ todo }) => {\n  const [description, setDescription] = useState(todo.description);\n\n  //edit description function\n\n  const updateDescription = async e => {\n    e.preventDefault();\n    try {\n      const body = { description };\n      const response = await fetch(\n        `http://localhost:5001/todos/${todo.todo_id}`,\n        {\n          method: \"PUT\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify(body)\n        }\n      );\n\n      window.location = \"/\";\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  return (\n    <Fragment>\n      <button\n        type=\"button\"\n        class=\"btn btn-warning\"\n        data-toggle=\"modal\"\n        data-target={`#id${todo.todo_id}`}\n      >\n        Edit\n      </button>\n\n      {/* \n        id = id10\n      */}\n      <div\n        class=\"modal\"\n        id={`id${todo.todo_id}`}\n        onClick={() => setDescription(todo.description)}\n      >\n        <div class=\"modal-dialog\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n              <h4 class=\"modal-title\">Edit Todo</h4>\n              <button\n                type=\"button\"\n                class=\"close\"\n                data-dismiss=\"modal\"\n                onClick={() => setDescription(todo.description)}\n              >\n                &times;\n              </button>\n            </div>\n\n            <div class=\"modal-body\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                value={description}\n                onChange={e => setDescription(e.target.value)}\n              />\n            </div>\n\n            <div class=\"modal-footer\">\n              <button\n                type=\"button\"\n                class=\"btn btn-warning\"\n                data-dismiss=\"modal\"\n                onClick={e => updateDescription(e)}\n              >\n                Edit\n              </button>\n              <button\n                type=\"button\"\n                class=\"btn btn-danger\"\n                data-dismiss=\"modal\"\n                onClick={() => setDescription(todo.description)}\n              >\n                Close\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default EditTodo;\n",{"ruleId":"32","severity":1,"message":"33","line":12,"column":13,"nodeType":"34","messageId":"35","endLine":12,"endColumn":23},{"ruleId":"32","severity":1,"message":"36","line":10,"column":13,"nodeType":"34","messageId":"35","endLine":10,"endColumn":21},{"ruleId":"32","severity":1,"message":"36","line":12,"column":13,"nodeType":"34","messageId":"35","endLine":12,"endColumn":21},"no-unused-vars","'deleteTodo' is assigned a value but never used.","Identifier","unusedVar","'response' is assigned a value but never used."]